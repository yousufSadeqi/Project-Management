{"version":3,"file":"conversationMessageDeserializers.js","sources":["../../../../../src/runtime/internals/ai/conversationMessageDeserializers.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeContent = void 0;\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst deserializeContent = (content) => content.map((block) => {\n    if (block.image) {\n        return deserializeImageBlock(block);\n    }\n    if (block.document) {\n        return deserializeDocumentBlock(block);\n    }\n    if (block.toolUse) {\n        return deserializeToolUseBlock(block);\n    }\n    if (block.toolResult) {\n        return deserializeToolResultBlock(block);\n    }\n    return removeNullsFromBlock(block);\n});\nexports.deserializeContent = deserializeContent;\nconst deserializeImageBlock = ({ image }) => ({\n    image: {\n        ...image,\n        source: {\n            ...image.source,\n            bytes: (0, util_base64_1.fromBase64)(image.source.bytes),\n        },\n    },\n});\nconst deserializeDocumentBlock = ({ document }) => ({\n    document: {\n        ...document,\n        source: {\n            ...document.source,\n            bytes: (0, util_base64_1.fromBase64)(document.source.bytes),\n        },\n    },\n});\nconst deserializeJsonBlock = ({ json }) => ({\n    json: JSON.parse(json),\n});\nconst deserializeToolUseBlock = ({ toolUse }) => ({\n    toolUse: {\n        ...toolUse,\n        input: JSON.parse(toolUse.input),\n    },\n});\nconst deserializeToolResultBlock = ({ toolResult, }) => ({\n    toolResult: {\n        toolUseId: toolResult.toolUseId,\n        content: toolResult.content.map((toolResultBlock) => {\n            if (toolResultBlock.image) {\n                return deserializeImageBlock(toolResultBlock);\n            }\n            if (toolResultBlock.json) {\n                return deserializeJsonBlock(toolResultBlock);\n            }\n            return removeNullsFromBlock(toolResultBlock);\n        }),\n    },\n});\nconst removeNullsFromBlock = (block) => Object.fromEntries(Object.entries(block).filter(([_, v]) => v !== null));\n"],"names":[],"mappings":"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"}