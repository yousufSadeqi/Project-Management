{"version":3,"file":"EventBuffer.js","sources":["../../../../src/utils/eventBuffer/EventBuffer.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventBuffer = void 0;\nconst core_1 = require(\"@aws-amplify/core\");\nconst logger = new core_1.ConsoleLogger('EventBuffer');\nclass EventBuffer {\n    constructor(config, getAnalyticsClient) {\n        this.list = [];\n        this.config = config;\n        this.getAnalyticsClient = getAnalyticsClient;\n        this.startEventLoop();\n    }\n    append(...events) {\n        for (const event of events) {\n            if (this.list.length + 1 > this.config.bufferSize) {\n                logger.debug(`Exceed ${typeof event} event buffer limits, event dropped`);\n                continue;\n            }\n            this.list.push(event);\n        }\n    }\n    flushAll() {\n        return this.submitEvents(this.list.length);\n    }\n    release() {\n        this.list = [];\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n    get length() {\n        return this.list.length;\n    }\n    head(count) {\n        return this.list.splice(0, count);\n    }\n    insertAtBeginning(...data) {\n        this.list.unshift(...data);\n    }\n    startEventLoop() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n        const { flushSize, flushInterval } = this.config;\n        setInterval(() => {\n            this.submitEvents(flushSize);\n        }, flushInterval);\n    }\n    submitEvents(count) {\n        const events = this.head(count);\n        if (events.length === 0) {\n            return Promise.resolve();\n        }\n        return this.getAnalyticsClient()(events).then(result => {\n            if (result.length > 0) {\n                this.insertAtBeginning(...result);\n            }\n        });\n    }\n}\nexports.EventBuffer = EventBuffer;\n"],"names":[],"mappings":";;AACA;AACA;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC7D,OAAO,CAAC,WAAW,GAAG,MAAM;AAC5B,MAAM,MAAM,GAAG,OAAO,CAAC,mBAAmB,CAAC;AAC3C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC;AACtD,MAAM,WAAW,CAAC;AAClB,IAAI,WAAW,CAAC,MAAM,EAAE,kBAAkB,EAAE;AAC5C,QAAQ,IAAI,CAAC,IAAI,GAAG,EAAE;AACtB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,kBAAkB,GAAG,kBAAkB;AACpD,QAAQ,IAAI,CAAC,cAAc,EAAE;AAC7B;AACA,IAAI,MAAM,CAAC,GAAG,MAAM,EAAE;AACtB,QAAQ,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACpC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;AAC/D,gBAAgB,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,OAAO,KAAK,CAAC,mCAAmC,CAAC,CAAC;AACzF,gBAAgB;AAChB;AACA,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACjC;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AAClD;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,IAAI,GAAG,EAAE;AACtB,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACxB,YAAY,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;AACrC;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM;AAC/B;AACA,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC;AACzC;AACA,IAAI,iBAAiB,CAAC,GAAG,IAAI,EAAE;AAC/B,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AAClC;AACA,IAAI,cAAc,GAAG;AACrB,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACxB,YAAY,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;AACrC;AACA,QAAQ,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,MAAM;AACxD,QAAQ,WAAW,CAAC,MAAM;AAC1B,YAAY,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;AACxC,SAAS,EAAE,aAAa,CAAC;AACzB;AACA,IAAI,YAAY,CAAC,KAAK,EAAE;AACxB,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACvC,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AACjC,YAAY,OAAO,OAAO,CAAC,OAAO,EAAE;AACpC;AACA,QAAQ,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI;AAChE,YAAY,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AACnC,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,GAAG,MAAM,CAAC;AACjD;AACA,SAAS,CAAC;AACV;AACA;AACA,OAAO,CAAC,WAAW,GAAG,WAAW;;"}