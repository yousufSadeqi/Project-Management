{"version":3,"file":"signIn.js","sources":["../../../../../src/providers/cognito/apis/signIn.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signIn = void 0;\nconst signInHelpers_1 = require(\"../utils/signInHelpers\");\nconst signInWithCustomAuth_1 = require(\"./signInWithCustomAuth\");\nconst signInWithCustomSRPAuth_1 = require(\"./signInWithCustomSRPAuth\");\nconst signInWithSRP_1 = require(\"./signInWithSRP\");\nconst signInWithUserPassword_1 = require(\"./signInWithUserPassword\");\nconst signInWithUserAuth_1 = require(\"./signInWithUserAuth\");\nconst autoSignIn_1 = require(\"./autoSignIn\");\n/**\n * Signs a user in\n *\n * @param input -  The SignInInput object\n * @returns SignInOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException }\n *  - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signIn(input) {\n    // Here we want to reset the store but not reassign the callback.\n    // The callback is reset when the underlying promise resolves or rejects.\n    // With the advent of session based sign in, this guarantees that the signIn API initiates a new auth flow,\n    // regardless of whether it is called for a user currently engaged in an active auto sign in session.\n    (0, autoSignIn_1.resetAutoSignIn)(false);\n    const authFlowType = input.options?.authFlowType;\n    await (0, signInHelpers_1.assertUserNotAuthenticated)();\n    switch (authFlowType) {\n        case 'USER_SRP_AUTH':\n            return (0, signInWithSRP_1.signInWithSRP)(input);\n        case 'USER_PASSWORD_AUTH':\n            return (0, signInWithUserPassword_1.signInWithUserPassword)(input);\n        case 'CUSTOM_WITHOUT_SRP':\n            return (0, signInWithCustomAuth_1.signInWithCustomAuth)(input);\n        case 'CUSTOM_WITH_SRP':\n            return (0, signInWithCustomSRPAuth_1.signInWithCustomSRPAuth)(input);\n        case 'USER_AUTH':\n            return (0, signInWithUserAuth_1.signInWithUserAuth)(input);\n        default:\n            return (0, signInWithSRP_1.signInWithSRP)(input);\n    }\n}\nexports.signIn = signIn;\n"],"names":[],"mappings":";;AACA;AACA;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC7D,OAAO,CAAC,MAAM,GAAG,MAAM;AACvB,MAAM,eAAe,GAAG,OAAO,CAAC,wBAAwB,CAAC;AACzD,MAAM,sBAAsB,GAAG,OAAO,CAAC,wBAAwB,CAAC;AAChE,MAAM,yBAAyB,GAAG,OAAO,CAAC,2BAA2B,CAAC;AACtE,MAAM,eAAe,GAAG,OAAO,CAAC,iBAAiB,CAAC;AAClD,MAAM,wBAAwB,GAAG,OAAO,CAAC,0BAA0B,CAAC;AACpE,MAAM,oBAAoB,GAAG,OAAO,CAAC,sBAAsB,CAAC;AAC5D,MAAM,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM,CAAC,KAAK,EAAE;AAC7B;AACA;AACA;AACA;AACA,IAAI,IAAI,YAAY,CAAC,eAAe,EAAE,KAAK,CAAC;AAC5C,IAAI,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,EAAE,YAAY;AACpD,IAAI,MAAM,IAAI,eAAe,CAAC,0BAA0B,GAAG;AAC3D,IAAI,QAAQ,YAAY;AACxB,QAAQ,KAAK,eAAe;AAC5B,YAAY,OAAO,IAAI,eAAe,CAAC,aAAa,EAAE,KAAK,CAAC;AAC5D,QAAQ,KAAK,oBAAoB;AACjC,YAAY,OAAO,IAAI,wBAAwB,CAAC,sBAAsB,EAAE,KAAK,CAAC;AAC9E,QAAQ,KAAK,oBAAoB;AACjC,YAAY,OAAO,IAAI,sBAAsB,CAAC,oBAAoB,EAAE,KAAK,CAAC;AAC1E,QAAQ,KAAK,iBAAiB;AAC9B,YAAY,OAAO,IAAI,yBAAyB,CAAC,uBAAuB,EAAE,KAAK,CAAC;AAChF,QAAQ,KAAK,WAAW;AACxB,YAAY,OAAO,IAAI,oBAAoB,CAAC,kBAAkB,EAAE,KAAK,CAAC;AACtE,QAAQ;AACR,YAAY,OAAO,IAAI,eAAe,CAAC,aAAa,EAAE,KAAK,CAAC;AAC5D;AACA;AACA,OAAO,CAAC,MAAM,GAAG,MAAM;;"}