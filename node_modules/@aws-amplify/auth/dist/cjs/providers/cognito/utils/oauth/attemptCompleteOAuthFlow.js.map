{"version":3,"file":"attemptCompleteOAuthFlow.js","sources":["../../../../../../src/providers/cognito/utils/oauth/attemptCompleteOAuthFlow.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.attemptCompleteOAuthFlow = void 0;\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst utils_2 = require(\"../../../../utils\");\nconst oAuthStore_1 = require(\"./oAuthStore\");\nconst completeOAuthFlow_1 = require(\"./completeOAuthFlow\");\nconst getRedirectUrl_1 = require(\"./getRedirectUrl\");\nconst handleFailure_1 = require(\"./handleFailure\");\nconst attemptCompleteOAuthFlow = async (authConfig) => {\n    try {\n        (0, utils_1.assertTokenProviderConfig)(authConfig);\n        (0, utils_1.assertOAuthConfig)(authConfig);\n        oAuthStore_1.oAuthStore.setAuthConfig(authConfig);\n    }\n    catch (_) {\n        // no-op\n        // This should not happen as Amplify singleton checks the oauth config key\n        // unless the oauth config object doesn't contain required properties\n        return;\n    }\n    // No inflight OAuth\n    if (!(await oAuthStore_1.oAuthStore.loadOAuthInFlight())) {\n        return;\n    }\n    try {\n        const currentUrl = window.location.href;\n        const { loginWith, userPoolClientId } = authConfig;\n        const { domain, redirectSignIn, responseType } = loginWith.oauth;\n        const redirectUri = (0, getRedirectUrl_1.getRedirectUrl)(redirectSignIn);\n        await (0, completeOAuthFlow_1.completeOAuthFlow)({\n            currentUrl,\n            clientId: userPoolClientId,\n            domain,\n            redirectUri,\n            responseType,\n            userAgentValue: (0, utils_2.getAuthUserAgentValue)(utils_1.AuthAction.SignInWithRedirect),\n        });\n    }\n    catch (err) {\n        await (0, handleFailure_1.handleFailure)(err);\n    }\n};\nexports.attemptCompleteOAuthFlow = attemptCompleteOAuthFlow;\n"],"names":[],"mappings":";;AACA;AACA;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC7D,OAAO,CAAC,wBAAwB,GAAG,MAAM;AACzC,MAAM,OAAO,GAAG,OAAO,CAAC,mCAAmC,CAAC;AAC5D,MAAM,OAAO,GAAG,OAAO,CAAC,mBAAmB,CAAC;AAC5C,MAAM,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC;AAC5C,MAAM,mBAAmB,GAAG,OAAO,CAAC,qBAAqB,CAAC;AAC1D,MAAM,gBAAgB,GAAG,OAAO,CAAC,kBAAkB,CAAC;AACpD,MAAM,eAAe,GAAG,OAAO,CAAC,iBAAiB,CAAC;AAClD,MAAM,wBAAwB,GAAG,OAAO,UAAU,KAAK;AACvD,IAAI,IAAI;AACR,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,yBAAyB,EAAE,UAAU,CAAC;AAC1D,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,iBAAiB,EAAE,UAAU,CAAC;AAClD,QAAQ,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;AACzD;AACA,IAAI,OAAO,CAAC,EAAE;AACd;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,IAAI,IAAI,EAAE,MAAM,YAAY,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC,EAAE;AAC9D,QAAQ;AACR;AACA,IAAI,IAAI;AACR,QAAQ,MAAM,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI;AAC/C,QAAQ,MAAM,EAAE,SAAS,EAAE,gBAAgB,EAAE,GAAG,UAAU;AAC1D,QAAQ,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,YAAY,EAAE,GAAG,SAAS,CAAC,KAAK;AACxE,QAAQ,MAAM,WAAW,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,cAAc,EAAE,cAAc,CAAC;AAChF,QAAQ,MAAM,CAAC,CAAC,EAAE,mBAAmB,CAAC,iBAAiB,EAAE;AACzD,YAAY,UAAU;AACtB,YAAY,QAAQ,EAAE,gBAAgB;AACtC,YAAY,MAAM;AAClB,YAAY,WAAW;AACvB,YAAY,YAAY;AACxB,YAAY,cAAc,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,qBAAqB,EAAE,OAAO,CAAC,UAAU,CAAC,kBAAkB,CAAC;AACrG,SAAS,CAAC;AACV;AACA,IAAI,OAAO,GAAG,EAAE;AAChB,QAAQ,MAAM,IAAI,eAAe,CAAC,aAAa,EAAE,GAAG,CAAC;AACrD;AACA,CAAC;AACD,OAAO,CAAC,wBAAwB,GAAG,wBAAwB;;"}